{
	"name": "dataflow1",
	"properties": {
		"folder": {
			"name": "Second Assesment"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "DB_consolidateddb",
						"type": "LinkedServiceReference"
					},
					"name": "GettingDataFromStaging"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Row ID} as string,",
				"          {Order ID} as string,",
				"          {Order Date} as string,",
				"          {Ship Date} as string,",
				"          {Ship Mode} as string,",
				"          {Customer ID} as string,",
				"          {Customer Name} as string,",
				"          Segment as string,",
				"          Country as string,",
				"          City as string,",
				"          State as string,",
				"          {Postal Code} as string,",
				"          Region as string,",
				"          {Product ID} as string,",
				"          Category as string,",
				"          {Sub-Category} as string,",
				"          {Product Name} as string,",
				"          Sales as string,",
				"          Quantity as string,",
				"          Discount as string,",
				"          Profit as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: 'staging',",
				"     tableName: 'store',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> GettingDataFromStaging",
				"GettingDataFromStaging select(mapColumn(",
				"          {Row ID},",
				"          {Order ID},",
				"          {Order Date},",
				"          {Ship Date},",
				"          {Ship Mode},",
				"          {Customer ID},",
				"          {Product ID},",
				"          {Product Name}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1"
			]
		}
	}
}